{"remainingRequest":"/Users/User/Desktop/projects/VueQuizApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/User/Desktop/projects/VueQuizApp/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/User/Desktop/projects/VueQuizApp/src/components/QuestionBox.vue","mtime":1601432306439},{"path":"/Users/User/Desktop/projects/VueQuizApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/User/Desktop/projects/VueQuizApp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/User/Desktop/projects/VueQuizApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/User/Desktop/projects/VueQuizApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBfIGZyb20gJ2xvZGFzaCcKZXhwb3J0IGRlZmF1bHQgewogICAgcHJvcHM6IHsKICAgICAgICBjdXJyZW50UXVlc3Rpb246IE9iamVjdCwKICAgICAgICBuZXh0OiBGdW5jdGlvbiwKICAgICAgICBpbmNyZW1lbnQ6IEZ1bmN0aW9uCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBzZWxlY3RlZEluZGV4OiBudWxsLAogICAgICAgICAgICBjb3JyZWN0SW5kZXg6IG51bGwsCiAgICAgICAgICAgIHNodWZmbGVkQW5zOiBbXQogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGN1cnJlbnRRdWVzdGlvbjogewogICAgICAgICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgICAgICAgIGhhbmRsZXIoKSB7CiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gbnVsbAogICAgICAgICAgICAgICAgICAgIHRoaXMuc2h1ZmZsZUFucygpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBzZWxlY3RlZEFuc3dlcihpbmRleCkgewogICAgICAgICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSBpbmRleDsKCiAgICAgICAgfSwKICAgICAgICBzdWJtaXRBbnMoKSB7CiAgICAgICAgICAgIGxldCBpc0NvcnJlY3QgPSBmYWxzZTsKICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRJbmRleCA9PT0gdGhpcy5jb3JyZWN0SW5kZXgpIHsKICAgICAgICAgICAgICAgIGlzQ29ycmVjdCA9IHRydWUKICAgICAgICAgICAgICAgIHRoaXMuaW5jcmVtZW50KGlzQ29ycmVjdCkKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2h1ZmZsZUFucygpIHsKICAgICAgICAgICAgbGV0IGFuc3dlcnMgPSBbLi4udGhpcy5jdXJyZW50UXVlc3Rpb24uaW5jb3JyZWN0X2Fuc3dlcnMsIHRoaXMuY3VycmVudFF1ZXN0aW9uLmNvcnJlY3RfYW5zd2VyXQogICAgICAgICAgICAgdGhpcy5zaHVmZmxlZEFucyA9IF8uc2h1ZmZsZShhbnN3ZXJzKQogICAgICAgICAgICAgdGhpcy5jb3JyZWN0SW5kZXggPSB0aGlzLnNodWZmbGVkQW5zLmluZGV4T2YodGhpcy5jdXJyZW50UXVlc3Rpb24uY29ycmVjdF9hbnN3ZXIpCiAgICAgICAgfSwKICAgICAgICBhbnN3ZXJDbGFzcyhpbmRleCkgewogICAgICAgICAgICBsZXQgYW5zd2VyQ2xhc3MgPSAiIjsKICAgICAgICAgICAgaWYgKHNlbGVjdGVkSW5kZXggPT09IGluZGV4KSB7CiAgICAgICAgICAgICAgICBhbnN3ZXJDbGFzcyA9ICJzZWxlY3RlZCIKICAgICAgICAgICAgfSBlbHNlIGlmIChjb3JyZWN0SW5kZXggPT09IGluZGV4KSB7CiAgICAgICAgICAgICAgICBhbnN3ZXJDbGFzcyA9ICJjb3JyZWN0QW5zIgogICAgICAgICAgICB9IGVsc2UgaWYgKGNvcnJlY3RJbmRleCA9PT0gaW5kZXgpIHsKICAgICAgICAgICAgICAgIGFuc3dlckNsYXNzID0gImluY29ycmVjdEFucyIKICAgICAgICAgICAgfQoKICAgICAgICAgICAgY29ycmVjdEluZGV4ID09PSBpbmRleCA/IGNvcnJlY3RBbnMgOgogICAgICAgICAgICBjb3JyZWN0SW5kZXggPT09IGluZGV4ID8gaW5jb3JyZWN0QW5zIDogJycKCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgYW5zd2VycygpIHsKICAgICAgICAgICAgbGV0IGFuc3dlcnMgPSBbLi4udGhpcy5jdXJyZW50UXVlc3Rpb24uaW5jb3JyZWN0X2Fuc3dlcnNdCiAgICAgICAgICAgIGFuc3dlcnMucHVzaCh0aGlzLmN1cnJlbnRRdWVzdGlvbi5jb3JyZWN0X2Fuc3dlcikKICAgICAgICAgICAgcmV0dXJuIGFuc3dlcnMKICAgICAgICB9CiAgICB9Cn0KCg=="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"questionbox-container\">\n    <b-jumbotron>\n      <template slot=\"lead\"> {{currentQuestion.question}} </template>\n\n      <hr class=\"my-4\" />\n\n\n\n    <b-list-group>\n        <b-list-group-item\n        v-for=\"(answer, index) in answers\" :key=\"index\"\n        @click.prevent=\"selectedAnswer(index)\"\n        :class=\"answerClass(index)\"\n        >\n            {{answer}}\n        </b-list-group-item>\n    </b-list-group>\n\n      <b-button\n      variant=\"primary\"\n      @click=\"submitAns\"\n      :disabled=\"selectedIndex === null\"\n      >\n        Submit\n    </b-button>\n      <b-button  @click=\"next\" variant=\"success\" href=\"#\">Next</b-button>\n    </b-jumbotron>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nexport default {\n    props: {\n        currentQuestion: Object,\n        next: Function,\n        increment: Function\n    },\n    data() {\n        return {\n            selectedIndex: null,\n            correctIndex: null,\n            shuffledAns: []\n        }\n    },\n    watch: {\n        currentQuestion: {\n            immediate: true,\n            handler() {\n                {\n                    this.selectedIndex = null\n                    this.shuffleAns()\n                }\n            }\n        }\n\n    },\n    methods: {\n        selectedAnswer(index) {\n            this.selectedIndex = index;\n\n        },\n        submitAns() {\n            let isCorrect = false;\n            if (this.selectedIndex === this.correctIndex) {\n                isCorrect = true\n                this.increment(isCorrect)\n            }\n        },\n        shuffleAns() {\n            let answers = [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\n             this.shuffledAns = _.shuffle(answers)\n             this.correctIndex = this.shuffledAns.indexOf(this.currentQuestion.correct_answer)\n        },\n        answerClass(index) {\n            let answerClass = \"\";\n            if (selectedIndex === index) {\n                answerClass = \"selected\"\n            } else if (correctIndex === index) {\n                answerClass = \"correctAns\"\n            } else if (correctIndex === index) {\n                answerClass = \"incorrectAns\"\n            }\n\n            correctIndex === index ? correctAns :\n            correctIndex === index ? incorrectAns : ''\n\n        }\n    },\n    computed: {\n        answers() {\n            let answers = [...this.currentQuestion.incorrect_answers]\n            answers.push(this.currentQuestion.correct_answer)\n            return answers\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n    .list-group {\n        margin-bottom: 15px;\n    }\n    .list-group-item:hover {\n        background-color: #EEE;\n        cursor: pointer;\n    }\n    .btn {\n        margin-left: 5px;\n    }\n    .correctAns {\n        background-color: #45EE45;\n    }\n    .selected {\n        background-color:#7676cc;\n    }\n    .incorrectAns {\n        background-color: #aa4445;\n    }\n</style>\n"]}]}